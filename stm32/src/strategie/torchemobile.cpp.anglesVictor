#include "torchemobile.h"
//#include "tireLances.h"
#include "strategieV2.h"
#include "actionGoTo.h"
#include "leds.h"
#include "odometrie.h"
#include "asservissement.h"
#include "positionPlusAngle.h"

TorcheMobile::TorcheMobile() {}

TorcheMobile::TorcheMobile(bool isBlue, Position positionDepart, Position positionTorche, bool porteUnFeu, float precision)
{
    this->isBlue = isBlue;
    this->positionDepart = positionDepart;
    this->positionTorche = positionTorche;
    this->precision = precision;
    this->porteUnFeu = porteUnFeu;
    status = 0;
    bracquemart = Brak::getSingleton();
}

int TorcheMobile::update()
{
    if (status == 0)
    {
        status = 1;
    }
    else if (status == 1)
    {
        StrategieV2::setCurrentGoal(positionDepart, false, 1);
        status++;
    }
    else if (status == 2)
    {
        if (Command::isNear(positionDepart))
        {
            StrategieV2::lookAt(positionTorche);
            status++;
        }
    }
   else if (status == 3)
   {
       if (Command::isLookingAt(positionTorche))
       {
           bracquemart->positionFeuHautTorche();
           bracquemart->attraperFeu();
           status++;
       }
   }
   else if (status < 53)
   {
       status++;
   }
   else if (status == 53)
   {
       angle = -M_PI/6 - Odometrie::odometrie->getPos().getAngle();
       angle = (StrategieV2::getIsBlue() ? angle : wrapAngle(M_PI-angle));
       StrategieV2::lookAt(angle);
       status++;
   }
   else if (status == 54)
   {
       if (Command::isLookingAt(angle))
       {
           bracquemart->relacherFeu();
           status++;
       }
   }
   else if (status < 104)
   {
       status++;
   }
   else if (status == 104)
   {
       StrategieV2::lookAt(positionTorche);
       status++;
   }
   else if (status == 105)
   {
       if (Command::isLookingAt(positionTorche))
       {
            bracquemart->positionFeuMilieuTorche();
            bracquemart->attraperFeu();
            status++;
       }
   }
   else if (status < 205)
   {
       status++;
   }
   else if (status == 205)
   {
       bracquemart->positionIntermediaire();
       angle = -M_PI/2 - Odometrie::odometrie->getPos().getAngle();
       angle = (StrategieV2::getIsBlue() ? angle : wrapAngle(M_PI-angle));
       StrategieV2::lookAt(angle);
       status++;
   }
   else if (status < 256)
   {
       status++;
   }
   else if (status == 256)
   {
       bracquemart->orienterHaut();
       status++;
   }
   else if (status < 356)
   {
       status++;
   }
   else if (status == 356)
   {
       bracquemart->positionBasseRetourne();
       status++;
   }
   else if (status < 456)
   {
       status++;
   }
   else if (status == 456)
   {
       bracquemart->relacherFeu();
       status++;
   }
   else if (status < 506)
   {
       status++;
   }
   else if (status == 506)
   {
       angle = (StrategieV2::getIsBlue() ? angle + M_PI/6 : wrapAngle(angle - M_PI/6));
       StrategieV2::lookAt(angle);
       status++;
   }
   else if (status == 507)
   {
       if (Command::isLookingAt(angle))
       {
           bracquemart->positionIntermediaire();
           status++;
       }
   }
   else if (status < 607)
   {
       status++;
   }
   else if (status == 607)
   {
       bracquemart->orienterBas();
       status++;
   }
   else if (status < 707)
   {
       status++;
   }
   else if (status == 707)
   {
       StrategieV2::lookAt(positionTorche);
       status++;
   }
   else if (status == 708)
   {
       if (Command::isLookingAt(positionTorche))
       {
           bracquemart->positionFeuBasTorche();
           bracquemart->attraperFeu();
           status++;
       }
   }
   else if (status < 758)
   {
       status++;
   }
   else if (status == 758)
   {
       bracquemart->positionIntermediaire();
       status++;
   }
   else if (status < 808)
   {
       status++;
   }
   else if (status == 808)
   {
       angle = -Odometrie::odometrie->getPos().getAngle() - M_PI/3;
       angle = (StrategieV2::getIsBlue() ? angle : wrapAngle(M_PI-angle));
       StrategieV2::lookAt(angle);
       status++;
   }
   else if (status == 809)
   {
       if (Command::isLookingAt(angle))
       {
           bracquemart->positionFeuMilieuTorche();
           status++;
       }
   }
   else if (status < 859)
   {
       status++;
   }
   else if (status == 859)
   {
       bracquemart->relacherFeu();
       status++;
   }
   else if (status < 909)
   {
       status++;
   }
   else if (status == 959)
   {
       bracquemart->positionHaute();
       status = -1;
   }
}
